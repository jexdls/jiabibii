[{"X:\\x\\Documents\\jiabibii\\src\\index.js":"1","X:\\x\\Documents\\jiabibii\\src\\App.js":"2","X:\\x\\Documents\\jiabibii\\src\\reportWebVitals.js":"3"},{"size":680,"mtime":1614373522551,"results":"4","hashOfConfig":"5"},{"size":13925,"mtime":1615039539037,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"13gp2o5",{"filePath":"11","messages":"12","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"X:\\x\\Documents\\jiabibii\\src\\index.js",[],["16","17"],"X:\\x\\Documents\\jiabibii\\src\\App.js",["18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38"],"import './App.css';\nimport React, { useState, useRef } from 'react';\n\nimport { Carousel, Container, Modal, Tooltip, Overlay} from 'react-bootstrap';\n\nimport img1 from './img/test.gif';\nimport img2 from './img/test.gif';\nimport port_pic_portrait from './img/portrait_gorl.png';\nimport port_pic_landscape from './img/gorl.png';\nimport rose from './img/rose.png';\n\nimport InstagramEmbed from 'react-instagram-embed';\n\nimport { TwitterTimelineEmbed, TwitterTweetEmbed } from 'react-twitter-embed';\n\n\n\nfunction App() {\n    const [isOnPhone, setIsOnPhone] = useState((window.innerWidth < window.innerHeight)? true : false);\n    window.addEventListener('resize', ()=>checkIfOnPhone());\n\n     const[showContact, setShowContact] = useState(false);\n\n      // FACEBOOK EMBED CONFIG\n     const[facebookIframeW, setFacebookIframeW] = useState(350);\n     const[facebooksrc, setFacebooksrc] = useState(\"https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fjiabibii%2Fposts%2F673875673439182&show_text=true&appId=195073292401592&width=\"+facebookIframeW);\n     const[facebookIframeJSX, setFacebookIframeJSX] = \n     useState(<iframe \n      id=\"facebook\"\n      className=\"iframe-style\" \n      src={facebooksrc}\n      scrolling=\"no\" \n      allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\">\n      </iframe>);\n\n      // YOUTUBE EMBED CONFIG\n     const[youtubeIframeW, setYoutubeIframeW] = useState(350);\n     const[youtubesrc, setYoutubesrc] = useState(\"https://www.youtube.com/embed/JGF7MFZZAEY\");\n     const[youtubeIframeJSX, setYoutubeIframeJSX] = \n     useState(<iframe \n      id=\"youtube\"\n      className=\"iframe-style\" \n      width={youtubeIframeW}\n      height=\"315\" \n      src={youtubesrc}\n      frameborder=\"0\" \n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n      allowfullscreen>\n      </iframe>);\n\n      // INSTAGRAM EMBED CONFIG\n     const instagramAppId=\"195073292401592\";\n     const instagramClientToken=\"b9933604cbc0cf490f8ffeb97e719bc2\";\n     const instagramPostId=\"CLu1U0Flyfd\";\n     const[instagramIframeW, setInstagramIframeW] = useState(500);\n     const[instagramIframeJSX, setInstagramIframeJSX] = \n     useState(<InstagramEmbed\n              url={'https://instagr.am/p/'+instagramPostId+'/'}\n              clientAccessToken={instagramAppId+\"|\"+instagramClientToken}\n              maxWidth={instagramIframeW}\n              hideCaption={false}\n              containerTagName='div'\n              protocol=''\n              injectScript\n              onLoading={() => {}}\n              onSuccess={() => {}}\n              onAfterRender={() => {}}\n              onFailure={() => {}}\n            />);\n\n\n      // TWITTER EMBED CONFIG\n     const[twitterIframeJSX, setTwitterIframeJSX] = \n     useState(\n              <div className=\"centerContent\">\n              <div className=\"selfCenter\">\n              <TwitterTweetEmbed tweetId=\"1338847828576063488\" />\n              </div>\n              </div>);\n\n      // TIKTOK EMBED CONFIG\n     const[tiktokCite, setTiktokCite] = useState(\"https://www.tiktok.com/@jiabibii/video/6936295605538934018\" );\n     const[tiktokDataVideoId, setTiktokDataVideoId] = useState(\"6936295605538934018\" );\n     const[tiktokSection, setTiktokSection] = \n     useState(\n              <div>\n                      <section> \n                          <a target=\"_blank\" title=\"@jiabibii\" href=\"https://www.tiktok.com/@jiabibii\">\n                            @jiabibii\n                          </a> \n                          <p>\n                            <a title=\"adoptdontshop\" target=\"_blank\" href=\"https://www.tiktok.com/tag/adoptdontshop\">\n                              #adoptdontshop\n                            </a>\n                             follow @pawssionproject  official tiktok ðŸ¥°\n                           </p> \n                           <a target=\"_blank\" title=\"â™¬ original sound - Cibi\" href=\"https://www.tiktok.com/music/original-sound-6922356027585268486\">\n                            â™¬ original sound - Cibi\n                          </a> \n                        </section>\n             </div>\n                );\n     const[tiktokIframeJSX, setTiktokIframeJSX] = \n     useState(\n              <div>\n                <blockquote \n                  class=\"tiktok-embed\" \n                  cite={tiktokCite}\n                  data-video-id={tiktokDataVideoId}\n                  style={{maxWidth: \"605px\", minWidth: \"325px\"}}> \n                   {tiktokSection}\n                </blockquote> \n                \n              </div>);\n\n\n    function checkIfOnPhone(){\n      setIsOnPhone((window.innerWidth-250 < window.innerHeight)? true : false);\n    }\n\n  return (\n    <Container fluid className=\"px-0 App\">\n\n      <section id=\"home_sec\">\n        <ContactInfo setShowContact={setShowContact} showContact={showContact}/>\n        <GifOverview isOnPhone={isOnPhone}/>\n        <Container fluid className={isOnPhone ? \"px-0 ml-0 main-cont d-flex\":\"px-0 ml-0 main-cont d-flex mt-2\"}>\n          {/* <YellowLineAnim/> */}\n          <MainTitle/>\n          {/* <Container id=\"cta_cont\"> */}\n            <CTAButtons setShowContact={setShowContact} showContact={showContact}/>\n          {/* </Container> */}\n        </Container>\n        <Container className={isOnPhone?\"about-out-cont-100vw\":\"about-out-cont-50vw\"} id=\"about_out_cont\" fluid>\n          <About/>\n        </Container>\n        <PortraitPicture isOnPhone={isOnPhone}/>\n        <RosePicture/>\n      </section>\n\n      <section id=\"content_sec\">\n        <ContentTitle/>\n        <Container fluid id=\"contents-cont\" className=\"m-auto d-flex flex-wrap\">\n          <LatestContentCard myIcon=\"fab fa-facebook\" xClass=\"facebook\" contentId=\"idfacebook\" iframeJSX={facebookIframeJSX}/>\n          <LatestContentCard myIcon=\"fab fa-youtube\" xClass=\"youtube\" contentId=\"idyoutube\" iframeJSX={youtubeIframeJSX}/>\n          <LatestContentCard myIcon=\"fab fa-instagram\" xClass=\"instagram\" contentId=\"idinstagram\" iframeJSX={instagramIframeJSX}/>\n          <LatestContentCard myIcon=\"fas fa-music\" xClass=\"tiktok\" contentId=\"idtiktok\" iframeJSX={tiktokIframeJSX}/>\n          <LatestContentCard myIcon=\"fab fa-twitter\" xClass=\"twitter\" contentId=\"idtwitter\" iframeJSX={twitterIframeJSX}/>\n        </Container>\n      </section>\n\n    </Container>\n  );\n}\n\n\nfunction GifOverview(props){\n    const isOnPhone = props.isOnPhone;\n    const img=[img1,img2];\n    const items=[];\n    // ITEMS IN CAROUSEL\n    if(isOnPhone){\n      for(let i=0; i<2; i++){\n        items.push(\n        <Carousel.Item interval={2500}>\n            <img\n              className=\"d-block w-100\"\n              src={img[i]}\n              alt={\"gif_\"+i}\n            />\n        </Carousel.Item>\n       );\n      }\n    }else{\n      for(let i=0; i<2; i++){\n        items.push(\n          <div className=\"img-cont\">\n            <img\n              className=\"d-block w-100\"\n              src={img[i]}\n              alt={\"gif_\"+i}\n            />\n          </div>\n       );\n      }\n    }\n\n    return (\n      <div className=\"gifoverview\">\n        {isOnPhone &&\n          <Container>\n            <Carousel className=\"gifoverview-carousel\">\n              {items}\n            </Carousel>\n          </Container>\n        }\n        {!isOnPhone &&\n          <Container fluid className=\"gifoverview-flex d-flex\">\n            {items}\n          </Container>\n        }\n      </div>\n    );\n}\n\n// function YellowLineAnim(props){\n//   return(\n//     <div className=\"ylw-l-anim d-flex\">\n//       <div className=\"long\"></div>\n//       <div className=\"short\"></div>\n//     </div>\n//     )\n// }\n\nfunction MainTitle(props){\n  return(\n    <div className=\"maintitle w-auto\">\n        <h1 className=\"maintitle_lg\">\n          JIA\n        </h1>\n        <SmallTitle/>\n    </div>\n    );\n}\n\nfunction SmallTitle() {\n  const [show, setShow] = useState(false);\n  const [underlineClass, setUnderlineClass] = useState(\"mt-n3\");\n  const target = useRef(null);\n\n  return (\n    <>\n        <button ref={target} \n          onMouseOver={() => {setUnderlineClass(\"mt-n3 underline-hover\")}}\n          onMouseLeave={() => {setUnderlineClass(\"mt-n3\")}}\n          onClick={() => {\n            copyToClipboard(document.querySelector(\".maintitle_sm\").textContent);\n            setShow(true);\n            setTimeout(()=>{setShow(false)},2000)}} \n          className=\"maintitle_sm\">\n          @jiabibii\n        </button>\n        <div id=\"underline\" className={underlineClass}></div>\n      <Overlay target={target.current} show={show} placement=\"right\">\n        {(props) => (\n          <Tooltip id=\"overlay-example\" {...props}>\n            text copied! be sure to follow my content! :D\n          </Tooltip>\n        )}\n      </Overlay>\n    </>\n  );\n}\n\nfunction CTAButtons(props){\n  const [isViewActive, setViewActive] = useState(true);\n  const setShowContact= props.setShowContact;\n\n  return(\n    <div className =\"cta-btns w-auto d-flex\">\n      <a href=\"#content_sec\">\n        <button \n          // onFocus={()=>{setViewActive(true)}}\n          // onBlur={()=>{setViewActive(false)}}\n          onMouseOver={()=>{setViewActive(true)}}\n          className={isViewActive? \"view x-active\" : \"view x-inactive\"}>\n          <i className=\"fas fa-eye\"></i> view latest content\n        </button>\n      </a>\n\n      <button \n        // onFocus={()=>{setViewActive(false)}}\n        // onBlur={()=>{setViewActive(true)}}\n        onMouseOver={()=>{setViewActive(false)}}\n\n        onClick={()=>{setShowContact(true)}}\n        className={isViewActive? \"contact x-inactive\" : \"contact x-active\"}>\n        <i className=\"fas fa-envelope\"></i> contact info\n      </button>\n    </div>\n    );\n}\n\nfunction ContactInfo(props){\n const show = props.showContact;\n const setShow = props.setShowContact;\n  return(\n    <Container className=\"mx-auto\">\n      \n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        dialogClassName=\"modal-90w mx-auto\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n        id=\"contact-info-modal-styling\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"title\">\n            contact <span>jiabibii</span>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body id=\"body\">\n          <h5>\n            click <i>#</i> to copy information\n          </h5>\n          <p>\n            <ContactCopybtn idOfToCopy=\"contact1\"/> <span id=\"contact1\">email</span>  <br/>\n            <ContactCopybtn idOfToCopy=\"contact2\"/> <span id=\"contact2\">gmail 2</span>  <br/>\n            <ContactCopybtn idOfToCopy=\"contact3\"/> <span id=\"contact3\">ymail 5</span>  <br/>\n          </p>\n        </Modal.Body>\n      </Modal>\n\n    </Container>\n      );\n}\n\nfunction ContactCopybtn(props) {\n  const [show, setShow] = useState(false);\n  const [underlineClass, setUnderlineClass] = useState(\"mt-n3\");\n  const target = useRef(null);\n\n  return (\n    <>\n        <button ref={target} \n          onClick={() => {\n            copyToClipboard(document.querySelector(\"#\"+props.idOfToCopy).textContent);\n            setShow(true);\n            setTimeout(()=>{setShow(false)},2000)}} \n          className=\"bg-tp border-0 mt-n3\">\n          <i>#</i>\n        </button>\n      <Overlay target={target.current} show={show} placement=\"right\">\n        {(props) => (\n          <Tooltip id=\"overlay-example\" {...props}>\n            Text copied!\n          </Tooltip>\n        )}\n      </Overlay>\n    </>\n  );\n}\n\nfunction PortraitPicture(props){\n  let alt=\"portrait of jiabibii\";\n  return(\n    <div className={props.isOnPhone ? \"img-portrait-portrait\" : \"img-portrait-landscape\"}>\n      {props.isOnPhone && <img id=\"img-portrait\" src={port_pic_portrait} alt={alt}/>}\n      {!props.isOnPhone && <img id=\"img-landscape\" src={port_pic_landscape} alt={alt}/>}\n    </div>\n    );\n}\n\nfunction RosePicture(props){\n  return(\n    <div id=\"rose-cont\" className=\"container-fluid d-flex flex-row-reverse\">\n      <div className=\"rose-picture\">\n        <img id=\"rose-img\" src={rose} alt=\"rose background\"/>\n      </div>\n    </div>\n    );\n}\n\nfunction About(props){\n  return(\n    <div className=\"about-cont d-flex\">\n      <h1>ABOUT</h1>\n      <p>lorem ipsum dolor sit amett lorem ipsum dolor sit amett lorem ipsum dolor sit amett lorem ipsum dolor sit amett lorem ipsum dolor sit amett lorem ipsum dolor sit amett lorem ipsum dolor sit amett lorem ipsum dolor sit amett</p>\n    </div>\n    );\n}\n\nfunction ContentTitle(props){\n  return(\n    <Container id=\"content-title-cont\" className=\"my-5\">\n      <h1><i className=\"fas fa-video\"></i> my latest content</h1>\n    </Container>\n    );\n}\n\nfunction LatestContentCard(props){\n  const[lineClassName, setLineClassName]=useState(\"line \" + props.xClass);\n  return(\n      <Container\n        id={props.contentId}\n        onMouseOver={() => setLineClassName(lineClassName+\" thick-line\")}\n        onMouseLeave={() => setLineClassName(\"line \" + props.xClass)}\n        className=\"latest-content-card-cont p-0\">\n          <div id=\"title-cont\" className={\"h_\"+props.xClass}>\n            <h1><i className={props.myIcon}></i></h1>\n          </div>\n          <div className={lineClassName}></div>\n          <div className=\"container mx-auto p-0 iframe-cont\">\n            {props.iframeJSX}\n          </div>\n      </Container>\n\n    );\n}\n\n\nfunction copyToClipboard(text){\n      const textArea = document.createElement('textarea');\n      textArea.value = text;\n\n      const body = document.body;\n      if (body != null) {\n          body.appendChild(textArea);\n          textArea.select();\n          document.execCommand('copy');\n          body.removeChild(textArea);\n      }\n  };\n\nexport default App;\n\n\n\n// TODO: \n\n// FIX responsive sizes. \n//   try mosaic brick grid\n//     differing height\n//     same width\n    // overlapping of content header\n\n// FADE(?) BLACK background content section\n\n// replace to supposed image\n\n// auto update of content post\n\n// add splash of design\n\n// secure tokens sensitive info","X:\\x\\Documents\\jiabibii\\src\\reportWebVitals.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":14,"column":10,"nodeType":"45","messageId":"46","endLine":14,"endColumn":30},{"ruleId":"43","severity":1,"message":"47","line":25,"column":29,"nodeType":"45","messageId":"46","endLine":25,"endColumn":47},{"ruleId":"43","severity":1,"message":"48","line":26,"column":25,"nodeType":"45","messageId":"46","endLine":26,"endColumn":39},{"ruleId":"43","severity":1,"message":"49","line":27,"column":31,"nodeType":"45","messageId":"46","endLine":27,"endColumn":51},{"ruleId":"50","severity":1,"message":"51","line":28,"column":15,"nodeType":"52","endLine":33,"endColumn":89},{"ruleId":"43","severity":1,"message":"53","line":37,"column":28,"nodeType":"45","messageId":"46","endLine":37,"endColumn":45},{"ruleId":"43","severity":1,"message":"54","line":38,"column":24,"nodeType":"45","messageId":"46","endLine":38,"endColumn":37},{"ruleId":"43","severity":1,"message":"55","line":39,"column":30,"nodeType":"45","messageId":"46","endLine":39,"endColumn":49},{"ruleId":"50","severity":1,"message":"51","line":40,"column":15,"nodeType":"52","endLine":48,"endColumn":23},{"ruleId":"43","severity":1,"message":"56","line":55,"column":30,"nodeType":"45","messageId":"46","endLine":55,"endColumn":49},{"ruleId":"43","severity":1,"message":"57","line":56,"column":32,"nodeType":"45","messageId":"46","endLine":56,"endColumn":53},{"ruleId":"43","severity":1,"message":"58","line":73,"column":30,"nodeType":"45","messageId":"46","endLine":73,"endColumn":49},{"ruleId":"43","severity":1,"message":"59","line":82,"column":24,"nodeType":"45","messageId":"46","endLine":82,"endColumn":37},{"ruleId":"43","severity":1,"message":"60","line":83,"column":31,"nodeType":"45","messageId":"46","endLine":83,"endColumn":51},{"ruleId":"43","severity":1,"message":"61","line":84,"column":27,"nodeType":"45","messageId":"46","endLine":84,"endColumn":43},{"ruleId":"62","severity":1,"message":"63","line":88,"column":27,"nodeType":"52","endLine":88,"endColumn":104},{"ruleId":"62","severity":1,"message":"63","line":92,"column":29,"nodeType":"52","endLine":92,"endColumn":118},{"ruleId":"62","severity":1,"message":"63","line":97,"column":28,"nodeType":"52","endLine":97,"endColumn":150},{"ruleId":"43","severity":1,"message":"64","line":103,"column":29,"nodeType":"45","messageId":"46","endLine":103,"endColumn":47},{"ruleId":"43","severity":1,"message":"65","line":320,"column":10,"nodeType":"45","messageId":"46","endLine":320,"endColumn":24},{"ruleId":"43","severity":1,"message":"66","line":320,"column":26,"nodeType":"45","messageId":"46","endLine":320,"endColumn":43},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'TwitterTimelineEmbed' is defined but never used.","Identifier","unusedVar","'setFacebookIframeW' is assigned a value but never used.","'setFacebooksrc' is assigned a value but never used.","'setFacebookIframeJSX' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'setYoutubeIframeW' is assigned a value but never used.","'setYoutubesrc' is assigned a value but never used.","'setYoutubeIframeJSX' is assigned a value but never used.","'setInstagramIframeW' is assigned a value but never used.","'setInstagramIframeJSX' is assigned a value but never used.","'setTwitterIframeJSX' is assigned a value but never used.","'setTiktokCite' is assigned a value but never used.","'setTiktokDataVideoId' is assigned a value but never used.","'setTiktokSection' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'setTiktokIframeJSX' is assigned a value but never used.","'underlineClass' is assigned a value but never used.","'setUnderlineClass' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]